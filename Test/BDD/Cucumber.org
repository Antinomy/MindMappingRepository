* Cucumber
** 为什么要用Cucumber？
*** 自动化验收测试
*** 行为驱动开发
*** 通用语言
*** 活的文档
    可执行的规格说明
** Gherkin基础
*** Feature
    提供一个放置与测试相关的摘要文档的地方
*** 场景
    特定情形下有关系统行为的具体实例
**** 无状态
     每个场景都必须有独立的意义，且能够不依赖其他场景独立运行
*** 步骤
    场景中的每一行都是一个步骤
**** Given、When、Then
**** And、But
**** 星号（＊）
     不想用Given、When、Then的时候，每一行都是＊开始就行。

*** 多语言支持
** 步骤定义
*** 两面
    对外把普通语言翻译成程序，对内使用自动化代码告诉系统做什么。
*** 步骤与步骤定义
    步骤只是用普通语言编写的文档，步骤定义赋予其生命。
*** 匹配步骤
    Cucumber扫描每个步骤的文本，通过*正则表达式*来寻找对应的步骤定义。
*** Given、When、Then是相等的
    Cucumber在匹配步骤的时候是忽略这几个关键字的。
*** 返回结果
**** 未定义 (undefined)
**** 待定 (pending)
**** 失败 (failed)
**** 通过 (passed)
** 富有表现力的场景
*** 背景 （Background）
    指定一组所有场景的公共步骤，相当于Junit里的@Before
**** 不设置复杂状态
**** 保持简短
**** 鲜明生动
**** 避免技术细节
*** 数据表
